# # ##keyboards.py
# from telegram import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup
# from config import CONFIG
# from settings import SETTINGS_CONFIG
# LOCATIONS = SETTINGS_CONFIG["LOCATIONS"]


# def create_unverified_user_keyboard():
#     return ReplyKeyboardMarkup([
#         ["–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞"],
#         ["–ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"]
#     ], resize_keyboard=True)

# def create_main_menu_keyboard(user_id=None):
#     """–£–ª—É—á—à–µ–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –ø–æ–ª–Ω—ã–º –Ω–∞–±–æ—Ä–æ–º –∫–Ω–æ–ø–æ–∫"""
#     menu = [
#         ["–ú–µ–Ω—é –Ω–∞ —Å–µ–≥–æ–¥–Ω—è", "–ú–µ–Ω—é –Ω–∞ –Ω–µ–¥–µ–ª—é"],
#         ["–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫–∞–∑—ã", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü"],
#         ["–ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"]
#     ]

#     # –†–æ–ª–∏
#     is_admin = hasattr(CONFIG, 'admin_ids') and user_id in CONFIG.admin_ids
#     is_provider = hasattr(CONFIG, 'provider_ids') and user_id in CONFIG.provider_ids
#     is_accounting = hasattr(CONFIG, 'accounting_ids') and user_id in CONFIG.accounting_ids

#     # –ö–Ω–æ–ø–∫–∏ –æ—Ç—á–µ—Ç–æ–≤ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤, –ø–æ—Å—Ç–∞–≤—â–∏–∫–æ–≤ –∏ –±—É—Ö–≥–∞–ª—Ç–µ—Ä–æ–≤
#     if is_admin or is_provider or is_accounting:
#         reports_menu = []
#         if is_admin or is_accounting:
#             reports_menu.append("üìä –û—Ç—á–µ—Ç –∑–∞ –¥–µ–Ω—å")
#         reports_menu.append("üìÖ –û—Ç—á–µ—Ç –∑–∞ –º–µ—Å—è—Ü")
#         menu.insert(0, reports_menu)

#     # –ê–¥–º–∏–Ω—Å–∫–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
#     if is_admin:
#         admin_menu = [
#             "‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π",
#             "üì¢ –°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É",
#             "‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"
#         ]
#         menu.append(admin_menu)

#     # –§—É–Ω–∫—Ü–∏–∏ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞
#     if is_provider:
#         menu.append(["‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –º–µ–Ω—é"])

#     # –û–±—â–∏–µ –∫–Ω–æ–ø–∫–∏
#     menu.append(["–û–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é", "üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"])

#     return ReplyKeyboardMarkup(menu, resize_keyboard=True)

# def create_month_selection_keyboard():
#     return ReplyKeyboardMarkup([
#         ["–¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü"],
#         ["–ü—Ä–æ—à–ª—ã–π –º–µ—Å—è—Ü"],
#         ["–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
#     ], resize_keyboard=True)

# def create_order_keyboard(has_order):
#     if has_order:
#         return [
#             [InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ", callback_data="change")],
#             [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="cancel")]
#         ]
#     return [[InlineKeyboardButton("‚úÖ –ó–∞–∫–∞–∑–∞—Ç—å", callback_data="order")]]

# def create_admin_keyboard():
#     """–û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω–∞"""
#     return ReplyKeyboardMarkup([
#         ["‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", "üì¢ –°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É"],
#         ["‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π", "üìú –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π"],
#         ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
#     ], resize_keyboard=True)

# def create_admin_config_keyboard():
#     return ReplyKeyboardMarkup([
#         ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", "‚ûñ –£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"],
#         ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞", "‚ûñ –£–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞"],
#         ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞", "‚ûñ –£–¥–∞–ª–∏—Ç—å –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞"],
#         ["‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞", "‚ûñ –£–¥–∞–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"],
#         ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∞–∑–¥–Ω–∏–∫", "‚ûñ –£–¥–∞–ª–∏—Ç—å –ø—Ä–∞–∑–¥–Ω–∏–∫"],
#         ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
#     ], resize_keyboard=True)

# def create_provider_menu_keyboard():
#     return ReplyKeyboardMarkup([
#         ["‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –º–µ–Ω—é"],
#         ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
#     ], resize_keyboard=True)