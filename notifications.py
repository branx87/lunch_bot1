# ##notifications.py
from telegram import Update
from telegram.constants import ParseMode
import logging

logger = logging.getLogger(__name__)

# async def show_access_denied(update_or_query) -> None:
#     """–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–ø—Ä–µ—Ç–µ –¥–æ—Å—Ç—É–ø–∞"""
#     try:
#         # –ï—Å–ª–∏ —ç—Ç–æ CallbackQuery (–Ω–∞–ø—Ä—è–º—É—é)
#         if hasattr(update_or_query, 'answer'):
#             await update_or_query.answer(
#                 "‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω. –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω",
#                 show_alert=True
#             )
#         # –ï—Å–ª–∏ —ç—Ç–æ Update –æ–±—ä–µ–∫—Ç
#         elif hasattr(update_or_query, 'callback_query'):
#             if update_or_query.callback_query:
#                 await update_or_query.callback_query.answer(
#                     "‚õî –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω. –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω",
#                     show_alert=True
#                 )
#             elif update_or_query.message:
#                 await update_or_query.message.reply_text(
#                     "‚õî –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω",
#                     parse_mode=ParseMode.HTML
#                 )
#         else:
#             logger.error(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –¥–ª—è show_access_denied: {type(update_or_query)}")
#     except Exception as e:
#         logger.error(f"–û—à–∏–±–∫–∞ –≤ show_access_denied: {e}")

async def show_access_denied(update_or_query) -> None:
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞"""
    try:
        message = (
            "üîß –ë–æ—Ç –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω\n"
            "–ò–¥—ë—Ç –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª–∞. –ü—Ä–∏–Ω–æ—à—É —Å–≤–æ–∏ –∏–∑–≤–∏–Ω–µ–Ω–∏—è.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–∫–∞–∑—ã–≤–∞–π—Ç–µ –æ–±–µ–¥ —á–µ—Ä–µ–∑ –ë–∏—Ç—Ä–∏–∫—Å –ø–æ —Å—Å—ã–ª–∫–µ."
        )
        
        if hasattr(update_or_query, 'answer'):
            await update_or_query.answer(message, show_alert=True)
        elif hasattr(update_or_query, 'callback_query'):
            if update_or_query.callback_query:
                await update_or_query.callback_query.answer(message, show_alert=True)
            elif update_or_query.message:
                await update_or_query.message.reply_text(message)
        else:
            logger.error(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –¥–ª—è show_access_denied: {type(update_or_query)}")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ show_access_denied: {e}")