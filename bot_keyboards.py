# ##bot_keyboards.py –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω—É –≤—Å–µ –æ—Ç—á–µ—Ç—ã
from asyncio.log import logger
from typing import Optional
from telegram import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardButton, InlineKeyboardMarkup
from db import CONFIG
from db import db
from settings import SETTINGS_CONFIG

LOCATIONS = SETTINGS_CONFIG["LOCATIONS"]

def create_unverified_user_keyboard():
    return ReplyKeyboardMarkup([
        ["–ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞"],
        ["–ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"]
    ], resize_keyboard=True)

def create_main_menu_keyboard(user_id=None):
    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å —Ä–∞–∑–Ω—ã–º–∏ –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ä–æ–ª–µ–π"""
    if not user_id:
        return ReplyKeyboardMarkup([
            ["–ú–µ–Ω—é –Ω–∞ —Å–µ–≥–æ–¥–Ω—è", "–ú–µ–Ω—é –Ω–∞ –Ω–µ–¥–µ–ª—é"],
            ["–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫–∞–∑—ã", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü"],
            ["–ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"]
        ], resize_keyboard=True)

    role = get_user_role(user_id)

    if role == 'employee':
        return ReplyKeyboardMarkup([
            ["–ú–µ–Ω—é –Ω–∞ —Å–µ–≥–æ–¥–Ω—è", "–ú–µ–Ω—é –Ω–∞ –Ω–µ–¥–µ–ª—é"],
            ["–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫–∞–∑—ã", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü"],
            ["–ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"]
        ], resize_keyboard=True)

    elif role == 'provider':
        return ReplyKeyboardMarkup([
            ["–ú–µ–Ω—é –Ω–∞ —Å–µ–≥–æ–¥–Ω—è", "–ú–µ–Ω—é –Ω–∞ –Ω–µ–¥–µ–ª—é"],
            ["‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –º–µ–Ω—é", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü"],
            ["üìä –û—Ç—á–µ—Ç –∑–∞ –¥–µ–Ω—å", "üìÖ –û—Ç—á–µ—Ç –∑–∞ –º–µ—Å—è—Ü"],
            ["–ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"]
        ], resize_keyboard=True)

    elif role == 'accountant':
        return ReplyKeyboardMarkup([
            ["–ú–µ–Ω—é –Ω–∞ —Å–µ–≥–æ–¥–Ω—è", "–ú–µ–Ω—é –Ω–∞ –Ω–µ–¥–µ–ª—é"],
            ["üìä –û—Ç—á–µ—Ç –∑–∞ –¥–µ–Ω—å", "üìÖ –û—Ç—á–µ—Ç –∑–∞ –º–µ—Å—è—Ü"],
            ["–ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"]
        ], resize_keyboard=True)

    elif role == 'admin':
        return create_admin_keyboard()

    return ReplyKeyboardMarkup([
        ["–ú–µ–Ω—é –Ω–∞ —Å–µ–≥–æ–¥–Ω—è", "–ú–µ–Ω—é –Ω–∞ –Ω–µ–¥–µ–ª—é"],
        ["–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫–∞–∑—ã", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü"],
        ["–ù–∞–ø–∏—Å–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É"],
        ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
    ], resize_keyboard=True)

def create_month_selection_keyboard():
    """–û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –º–µ—Å—è—Ü–∞ (–∫–Ω–æ–ø–∫–∏ —Ä—è–¥–æ–º)"""
    return ReplyKeyboardMarkup([
        ["–¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü", "–ü—Ä–æ—à–ª—ã–π –º–µ—Å—è—Ü"],
        ["üîô –ù–∞–∑–∞–¥"]
    ], resize_keyboard=True)

def create_admin_reports_menu():
    """–ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –æ—Ç—á–µ—Ç–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞"""
    return ReplyKeyboardMarkup([
        ["üìä –û—Ç—á–µ—Ç –∑–∞ –¥–µ–Ω—å", "üìÖ –û—Ç—á–µ—Ç –∑–∞ –º–µ—Å—è—Ü"],
        ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
    ], resize_keyboard=True)

def create_report_type_menu():
    """–ú–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –æ—Ç—á–µ—Ç–∞ (–±—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–∏–π/–ø–æ—Å—Ç–∞–≤—â–∏–∫–∞/–∞–¥–º–∏–Ω—Å–∫–∏–π)"""
    return ReplyKeyboardMarkup([
        ["üí∞ –ë—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–∏–π", "üì¶ –ü–æ—Å—Ç–∞–≤—â–∏–∫–∞", "üë®‚Äçüíº –ê–¥–º–∏–Ω—Å–∫–∏–π"],
        ["üîô –ù–∞–∑–∞–¥"]
    ], resize_keyboard=True)

def create_order_keyboard(has_order):
    if has_order:
        return [
            [InlineKeyboardButton("‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ", callback_data="change")],
            [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑", callback_data="cancel")]
        ]
    return [[InlineKeyboardButton("‚úÖ –ó–∞–∫–∞–∑–∞—Ç—å", callback_data="order")]]

def create_admin_keyboard():
    """–û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –∞–¥–º–∏–Ω–∞"""
    return ReplyKeyboardMarkup([
        ["–ú–µ–Ω—é –Ω–∞ —Å–µ–≥–æ–¥–Ω—è", "–ú–µ–Ω—é –Ω–∞ –Ω–µ–¥–µ–ª—é"],
        ["–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∑–∞–∫–∞–∑—ã", "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞ –º–µ—Å—è—Ü"],
        ["üìä –û—Ç—á–µ—Ç—ã", "‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–µ–π"],
        ["üì¢ –°–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É", "‚úâÔ∏è –ù–∞–ø–∏—Å–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"],
        ["üìú –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π", "üîí –í–∫–ª/–í—ã–∫–ª –∑–∞–∫–∞–∑—ã"],
        ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
    ], resize_keyboard=True)

def create_admin_config_keyboard():
    return ReplyKeyboardMarkup([
        ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", "‚ûñ –£–¥–∞–ª–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"],
        ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞", "‚ûñ –£–¥–∞–ª–∏—Ç—å –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞"],
        ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞", "‚ûñ –£–¥–∞–ª–∏—Ç—å –±—É—Ö–≥–∞–ª—Ç–µ—Ä–∞"],
        ["‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞", "‚ûñ –£–¥–∞–ª–∏—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞"],
        ["‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–∞–∑–¥–Ω–∏–∫", "‚ûñ –£–¥–∞–ª–∏—Ç—å –ø—Ä–∞–∑–¥–Ω–∏–∫"],
        ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
    ], resize_keyboard=True)

def create_provider_menu_keyboard():
    return ReplyKeyboardMarkup([
        ["‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –º–µ–Ω—é"],
        ["üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]
    ], resize_keyboard=True)

# === –î–æ–±–∞–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–∏ "–û—Ç–º–µ–Ω–∞" ===
def get_cancel_button():
    return InlineKeyboardMarkup([[
        InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_delete")
    ]])
    
def get_user_role(user_id: int) -> Optional[str]:
    """
    –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –µ–≥–æ Telegram ID.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–¥–Ω–æ –∏–∑: 'admin', 'provider', 'accountant', 'employee' –∏–ª–∏ None.
    """
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–æ–ª–∏ –∏–∑ –∫–æ–Ω—Ñ–∏–≥–∞
        if user_id in CONFIG.admin_ids:
            logger.debug(f"User {user_id} identified as admin")
            return 'admin'
        if user_id in CONFIG.provider_ids:
            logger.debug(f"User {user_id} identified as provider")
            return 'provider'
        if user_id in CONFIG.accounting_ids:
            logger.debug(f"User {user_id} identified as accountant")
            return 'accountant'

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–º
        db.cursor.execute(
            "SELECT id FROM users WHERE telegram_id = ? AND is_employee = TRUE AND is_deleted = FALSE",
            (user_id,)  # –í–∞–∂–Ω–æ: –ø–µ—Ä–µ–¥–∞–µ–º –∫–∞–∫ –∫–æ—Ä—Ç–µ–∂
        )
        result = db.cursor.fetchone()
        
        if result:
            logger.debug(f"User {user_id} identified as employee")
            return 'employee'
        
        logger.debug(f"User {user_id} has no recognized role")
        return None

    except Exception as e:
        logger.error(f"Error determining role for user {user_id}: {e}")
        return None